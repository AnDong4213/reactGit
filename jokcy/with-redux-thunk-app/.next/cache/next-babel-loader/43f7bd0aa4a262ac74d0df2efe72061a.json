{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react\\\\reactGit\\\\jokcy\\\\with-redux-thunk-app\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { startClock, serverRenderClock } from '../store';\nimport Examples from '../components/examples';\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Index).apply(this, arguments));\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var dispatch = this.props.dispatch;\n      this.timer = startClock(dispatch);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Examples, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      });\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var reduxStore = _ref.reduxStore,\n          req = _ref.req;\n      var isServer = !!req;\n      reduxStore.dispatch(serverRenderClock(isServer));\n      return {};\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nIndex.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(ctx) {\n    var promise;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(ctx);\n            promise = new _Promise(function (resolve) {\n              resolve({\n                name: 'QQ',\n                time: _Date$now() - 60 * 1000\n              });\n            });\n            _context.next = 4;\n            return promise;\n\n          case 4:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default connect()(Index);","map":{"version":3,"sources":["D:/react/reactGit/jokcy/with-redux-thunk-app/pages/index.js"],"names":["React","connect","startClock","serverRenderClock","Examples","Index","dispatch","props","timer","clearInterval","reduxStore","req","isServer","Component","getInitialProps","ctx","console","log","promise","resolve","name","time"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,iBAArB,QAA8C,UAA9C;AACA,OAAOC,QAAP,MAAqB,wBAArB;;IAEMC,K;;;;;;;;;;;;;wCAQgB;AAAA,UACVC,QADU,GACG,KAAKC,KADR,CACVD,QADU;AAElB,WAAKE,KAAL,GAAaN,UAAU,CAACI,QAAD,CAAvB;AACD;;;2CAEsB;AACrBG,MAAAA,aAAa,CAAC,KAAKD,KAAN,CAAb;AACD;;;6BAEQ;AACP,aAAO,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;0CAlB2C;AAAA,UAAnBE,UAAmB,QAAnBA,UAAmB;AAAA,UAAPC,GAAO,QAAPA,GAAO;AAC1C,UAAMC,QAAQ,GAAG,CAAC,CAACD,GAAnB;AACAD,MAAAA,UAAU,CAACJ,QAAX,CAAoBH,iBAAiB,CAACS,QAAD,CAArC;AAEA,aAAO,EAAP;AACD;;;;EANiBZ,KAAK,CAACa,S;;AAqB1BR,KAAK,CAACS,eAAN;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAwB,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACMG,YAAAA,OAFgB,GAEN,aAAY,UAAAC,OAAO,EAAI;AACrCA,cAAAA,OAAO,CAAC;AACNC,gBAAAA,IAAI,EAAE,IADA;AAENC,gBAAAA,IAAI,EAAE,cAAa,KAAK;AAFlB,eAAD,CAAP;AAID,aALe,CAFM;AAAA;AAAA,mBAQTH,OARS;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAWA,eAAejB,OAAO,GAAGI,KAAH,CAAtB","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { startClock, serverRenderClock } from '../store'\nimport Examples from '../components/examples'\n\nclass Index extends React.Component {\n  static getInitialProps({ reduxStore, req }) {\n    const isServer = !!req\n    reduxStore.dispatch(serverRenderClock(isServer))\n\n    return {}\n  }\n\n  componentDidMount() {\n    const { dispatch } = this.props\n    this.timer = startClock(dispatch)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer)\n  }\n\n  render() {\n    return <Examples />\n  }\n}\nIndex.getInitialProps = async ctx => {\n  console.log(ctx)\n  const promise = new Promise(resolve => {\n    resolve({\n      name: 'QQ',\n      time: Date.now() - 60 * 1000\n    })\n  })\n  return await promise\n}\n\nexport default connect()(Index)\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar _jsxFileName = \"D:\\\\react\\\\reactGit\\\\jokcy\\\\with-redux-thunk-app\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { startClock, serverRenderClock } from '../store';\nimport Examples from '../components/examples';\n\nclass Index extends React.Component {\n  static getInitialProps({\n    reduxStore,\n    req\n  }) {\n    const isServer = !!req;\n    reduxStore.dispatch(serverRenderClock(isServer));\n    return {};\n  }\n\n  componentDidMount() {\n    const {\n      dispatch\n    } = this.props;\n    this.timer = startClock(dispatch);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    return __jsx(Examples, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    });\n  }\n\n}\n\nIndex.getInitialProps = async ctx => {\n  console.log(ctx);\n  const promise = new _Promise(resolve => {\n    resolve({\n      name: 'QQ',\n      time: _Date$now() - 60 * 1000\n    });\n  });\n  return await promise;\n};\n\nexport default connect()(Index);","map":{"version":3,"sources":["D:/react/reactGit/jokcy/with-redux-thunk-app/pages/index.js"],"names":["React","connect","startClock","serverRenderClock","Examples","Index","Component","getInitialProps","reduxStore","req","isServer","dispatch","componentDidMount","props","timer","componentWillUnmount","clearInterval","render","ctx","console","log","promise","resolve","name","time"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,iBAArB,QAA8C,UAA9C;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAClC,SAAOC,eAAP,CAAuB;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAvB,EAA4C;AAC1C,UAAMC,QAAQ,GAAG,CAAC,CAACD,GAAnB;AACAD,IAAAA,UAAU,CAACG,QAAX,CAAoBR,iBAAiB,CAACO,QAAD,CAArC;AAEA,WAAO,EAAP;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAED,MAAAA;AAAF,QAAe,KAAKE,KAA1B;AACA,SAAKC,KAAL,GAAaZ,UAAU,CAACS,QAAD,CAAvB;AACD;;AAEDI,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKF,KAAN,CAAb;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,WAAO,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAnBiC;;AAqBpCZ,KAAK,CAACE,eAAN,GAAwB,MAAMW,GAAN,IAAa;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,QAAMG,OAAO,GAAG,aAAYC,OAAO,IAAI;AACrCA,IAAAA,OAAO,CAAC;AACNC,MAAAA,IAAI,EAAE,IADA;AAENC,MAAAA,IAAI,EAAE,cAAa,KAAK;AAFlB,KAAD,CAAP;AAID,GALe,CAAhB;AAMA,SAAO,MAAMH,OAAb;AACD,CATD;;AAWA,eAAepB,OAAO,GAAGI,KAAH,CAAtB","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { startClock, serverRenderClock } from '../store'\nimport Examples from '../components/examples'\n\nclass Index extends React.Component {\n  static getInitialProps({ reduxStore, req }) {\n    const isServer = !!req\n    reduxStore.dispatch(serverRenderClock(isServer))\n\n    return {}\n  }\n\n  componentDidMount() {\n    const { dispatch } = this.props\n    this.timer = startClock(dispatch)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer)\n  }\n\n  render() {\n    return <Examples />\n  }\n}\nIndex.getInitialProps = async ctx => {\n  console.log(ctx)\n  const promise = new Promise(resolve => {\n    resolve({\n      name: 'QQ',\n      time: Date.now() - 60 * 1000\n    })\n  })\n  return await promise\n}\n\nexport default connect()(Index)\n"]},"metadata":{},"sourceType":"module"}